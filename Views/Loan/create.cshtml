
   <h1>Hey</h1>

        <form action="Loan" method="post">
      <input type="text" id="selectedClientId" name="clientId">

          <div class="row g-3">
          <div class="col">
              <label for="">Client</label>
              <select id="clientId" class="form-control"></select>
          </div>
          <div class="col">
              <label for="">Status</label>
              <input type="text" class="form-control" placeholder="Status">
          </div>
        </div>

        <div class="row g-3">
          <div class="col">
              <label for="">Amount</label>
              <input type="text" class="form-control" placeholder="Amount" id="amount">
          </div>
           <div class="col">
            <label for="">No of Payment</label>
            <input type="text" class="form-control" placeholder="Enter Number of Payment" id="noOfPayment" onchange="calculateDueDate()">
          </div>
        </div>

        <div class="row g-3">
          <div class="col">
              <label for="">Deduction</label>
              <input type="text" class="form-control" placeholder="Enter Deduction" id="deduction">
          </div>
           <div class="col">
              <label for="">Type</label>
              <select id="typeofPayment" name="type" onchange="calculateDueDate()">
                <option value="0.1">Daily</option>
                <option value="0.3">Weekly</option>
                <option value="0.5">Monthly</option>
              </select>
            </div>
        </div>

        <div class="row g-3">
          <div class="col">
              <label for="">Interest</label>
              <input type="text" class="form-control" placeholder="Interest"  id="interest">
          </div>
          <div class="col">
              <label for="">Date Created</label>
              <input type="text" class="form-control" placeholder="Enter Number of Payment" type="date" class="form-row" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />
          </div>
        </div>

        <div class="row g-3">
          <div class="col">
              <label for="">Reciebale Amount</label>
              <input type="text" class="form-control" placeholder="Recievable Amount" id="receivableAmount" type="number">
          </div>
        <div class="col">
          <label for="">Due Date</label>
          <input type="text" class="form-control" placeholder="Enter Number of Payment" id="dueDate" readonly>
        </div>
        </div>
        <div class="row g-3">
          <div class="col">
              <label for="">Payable Amount</label>
              <input type="text" class="form-control" placeholder="Recievable Amount" id="payableAmount" type="number">
          </div>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>          

        </form>
 
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        $.ajax({
            url: 'http://localhost:5044/ClientAPI/GetClients'
        })
        .done(function(result) {
            console.log(result);
            const clientIdSelect = document.getElementById('clientId');
            result.forEach(function(client) {
                const option = document.createElement('option');
                option.value = client.id;
                option.text = client.fullName + ' ' + client.lastName;
                clientIdSelect.appendChild(option);
            });
        })
        .fail(function() {
            alert("Failed to fetch clients");
        });
    });
    

    const typeSelect = document.getElementById('typeofPayment');
    const interestInput = document.getElementById('interest');
    const noOfPaymentInput = document.getElementById('noOfPayment');
    const deductionInput = document.getElementById('deduction');
    const amountInput = document.getElementById('amount');
    const receivableAmountInput = document.getElementById('receivableAmount');
    const payableAmountInput = document.getElementById('payableAmount');

    typeSelect.addEventListener('change', function() {
        const selectedType = parseFloat(this.value);
        let defaultInterest = 0;

        if (selectedType === 0.1) {
            defaultInterest = 0.01; 
        } else if (selectedType === 0.3) {
            defaultInterest = 0.03;
        } else if (selectedType === 0.5) {
            defaultInterest = 0.05;
        }

        const calculatedInterest = defaultInterest;
        interestInput.value = calculatedInterest.toFixed(2);

        const noOfPayment = parseFloat(noOfPaymentInput.value);
        const amount = parseFloat(amountInput.value);
        const deduction = parseFloat(deductionInput.value); 

        const receivableAmount = amount;
        receivableAmountInput.value = receivableAmount.toFixed(2);

        // Calculate the interest amount and add deduction
        const interestAmount = amount * calculatedInterest * noOfPayment;
        const payableAmount = amount + interestAmount + deduction; // Include deduction
        payableAmountInput.value = payableAmount.toFixed(2);
    });

    function calculateDueDate() {
        const typeSelect = document.getElementById('typeofPayment');
        const noOfPaymentInput = document.getElementById('noOfPayment');
        const dueDateInput = document.getElementById('dueDate');

        const selectedType = parseFloat(typeSelect.value);
        const noOfPayment = parseInt(noOfPaymentInput.value);

        if (selectedType === 0.1) { // Daily
            const currentDate = new Date();
            currentDate.setDate(currentDate.getDate() + noOfPayment);
            dueDateInput.value = currentDate.toISOString().split('T')[0];
        } else if (selectedType === 0.3) { // Weekly
            const currentDate = new Date();
            currentDate.setDate(currentDate.getDate() + noOfPayment * 7);
            dueDateInput.value = currentDate.toISOString().split('T')[0];
        } else if (selectedType === 0.5) { // Monthly
            const currentDate = new Date();
            currentDate.setMonth(currentDate.getMonth() + noOfPayment);
            dueDateInput.value = currentDate.toISOString().split('T')[0];
        }
    }
</script>
