@model List<PrelimCoop.Entities.ClientsInfoTb>;

<h3>List of Clients</h3>
<a class="btn btn-success" href="../main/create"><i class="fas fa-plus"></i> Create New</a>
<div class="container">
<table id="list-table" class="display" style="width:100%">
    <thead>
        <tr>
            <th>#</th>
            <th>User Type</th>
            <th>Full Name</th>
            <th>Age</th>
            <th>Address</th>
            <th>Zip Code</th>
            <th>Occupation</th>
            <th>Operation</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var client in Model)
        {
            <tr>
                <td>@client.Id</td>
                <td>@client.UserType</td>
                <td>@(client.FullName + " " + client.LastName)</td>
                <td>@client.Age</td>
                <td>@client.Address</td>
                <td>@client.ZipCode</td>
                <td>@client.Occupation</td>
                <td>
                    <div class="button-container">
                        <a href="/main/update/@client.Id" title="Update"><i class="bi bi-arrow-up-circle-fill" style="color: blue;"></i></a>
                        <a href="/main/delete/@client.Id" title="Delete"><i class="bi bi-trash" style="color: red;"></i></a>
                        <a href="#" data-bs-toggle="modal" data-bs-target="#LoanModal" onclick="updateClientInfo('@client.Id', '@(client.FullName + " " + client.LastName)')" title="Make Loan"><i class="bi bi-cash"></i></a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>

<!-- Loan Modal -->
<div class="modal fade" id="LoanModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Loan For</h1>
                <h1 id="clientInfo"></h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form action="./Controllers/Loan/create" method="post">
                    <input type="hidden" id="clientId" name="clientId">

                    <div class="row g-3">
                        <div class="col">
                            <label for="clientName">Client Name</label>
                            <input type="text" class="form-control" id="clientName" readonly>
                        </div>
                    </div>

                    <div class="row g-3">
                        <div class="col">
                            <label for="amount">Amount</label>
                            <input type="text" class="form-control" id="amount" placeholder="Enter Amount" required>
                        </div>
                        <div class="col">
                            <label for="noOfPayment">No of Payment</label>
                            <input type="number" class="form-control" id="noOfPayment" placeholder="Enter Number of Payments" onchange="calculateDueDate()" required>
                        </div>
                    </div>

                    <div class="row g-3">
                        <div class="col">
                            <label for="deduction">Deduction</label>
                            <input type="text" class="form-control" id="deduction" placeholder="Enter Deduction" required>
                        </div>
                        <div class="col">
                            <label for="typeofPayment">Type of Payment</label>
                            <select id="typeofPayment" class="form-control" onchange="calculateDueDate()" required>
                                <option value="0.1">Daily</option>
                                <option value="0.3">Weekly</option>
                                <option value="0.5">Monthly</option>
                            </select>
                        </div>
                    </div>

                    <div class="row g-3">
                        <div class="col">
                            <label for="interest">Interest</label>
                            <input type="text" class="form-control" id="interest" placeholder="Interest" readonly>
                        </div>
                        <div class="col">
                            <label for="dateCreated">Date Created</label>
                            <input type="date" class="form-control" id="dateCreated" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly>
                        </div>
                    </div>

                    <div class="row g-3">
                        <div class="col">
                            <label for="receivableAmount">Receivable Amount</label>
                            <input type="text" class="form-control" id="receivableAmount" placeholder="Receivable Amount" readonly>
                        </div>
                        <div class="col">
                            <label for="dueDate">Due Date</label>
                            <input type="text" class="form-control" id="dueDate" placeholder="Due Date" readonly>
                        </div>
                    </div>

                    <div class="row g-3">
                        <div class="col">
                            <label for="payableAmount">Payable Amount</label>
                            <input type="text" class="form-control" id="payableAmount" placeholder="Payable Amount" readonly>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary">Submit</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    function updateClientInfo(clientId, clientName) {
        document.getElementById('clientId').value = clientId;
        document.getElementById('clientName').value = clientName;
        document.getElementById('clientInfo').textContent = clientName;
    }

    function calculateDueDate() {
        const typeSelect = document.getElementById('typeofPayment');
        const noOfPaymentInput = document.getElementById('noOfPayment');
        const dueDateInput = document.getElementById('dueDate');
        const interestInput = document.getElementById('interest');
        const deductionInput = document.getElementById('deduction');
        const amountInput = document.getElementById('amount');
        const receivableAmountInput = document.getElementById('receivableAmount');
        const payableAmountInput = document.getElementById('payableAmount');

        const selectedType = parseFloat(typeSelect.value);
        const noOfPayment = parseInt(noOfPaymentInput.value);
        const amount = parseFloat(amountInput.value);
        const deduction = parseFloat(deductionInput.value);

        let defaultInterest = 0;

        if (selectedType === 0.1) {
            defaultInterest = 0.01;
        } else if (selectedType === 0.3) {
            defaultInterest = 0.03;
        } else if (selectedType === 0.5) {
            defaultInterest = 0.05;
        }

        const calculatedInterest = defaultInterest;
        interestInput.value = calculatedInterest.toFixed(2);

        const receivableAmount = amount;
        receivableAmountInput.value = receivableAmount.toFixed(2);

        // Calculate the interest amount and add deduction
        const interestAmount = amount * calculatedInterest * noOfPayment;
        const payableAmount = amount + interestAmount + deduction;
        payableAmountInput.value = payableAmount.toFixed(2);

        // Calculate due date based on selected payment type
        if (selectedType === 0.1) { // Daily
            const currentDate = new Date();
            currentDate.setDate(currentDate.getDate() + noOfPayment);
            dueDateInput.value = currentDate.toISOString().split('T')[0];
        } else if (selectedType === 0.3) { // Weekly
            const currentDate = new Date();
            currentDate.setDate(currentDate.getDate() + noOfPayment * 7);
            dueDateInput.value = currentDate.toISOString().split('T')[0];
        } else if (selectedType === 0.5) { // Monthly
            const currentDate = new Date();
            currentDate.setMonth(currentDate.getMonth() + noOfPayment);
            dueDateInput.value = currentDate.toISOString().split('T')[0];
        }
    }
</script>
